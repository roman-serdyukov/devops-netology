1. Проверьте список доступных сетевых интерфейсов на вашем компьютере. Какие команды есть для этого в Linux и в Windows?

roman@DME-UBUNTU:/data/VMs/vagrant$ ip -c -br link
lo               UNKNOWN        00:00:00:00:00:00 <LOOPBACK,UP,LOWER_UP> 
enp0s31f6        UP             18:31:bf:0b:31:12 <BROADCAST,MULTICAST,UP,LOWER_UP> 
enx8c47be0b3c5e  DOWN           8c:47:be:0b:3c:5e <NO-CARRIER,BROADCAST,MULTICAST,UP> 

в windows список интерфейсов можно посмотреть соледующей командой:
netsh interface show interface

2. Какой протокол используется для распознавания соседа по сетевому интерфейсу? Какой пакет и команды есть в Linux для этого?

Протокол LLDP
Пакет lldpd, команда lldpctl

roman@DME-UBUNTU:/data/VMs/vagrant$ lldpctl
-------------------------------------------------------------------------------
LLDP neighbors:
-------------------------------------------------------------------------------
Interface:    enp0s31f6, via: LLDP, RID: 1, Time: 0 day, 00:07:16
  Chassis:     
    ChassisID:    mac 40:01:c6:73:2a:99
    SysName:      dme-asw2
    SysDescr:     3Com Baseline Switch 2952-SFP Plus Software Version 5.20 Release 1513P95 
                  Copyright (c) 2004-2015 3Com Corporation. All rights reserved.
    MgmtIP:       192.168.100.4
    Capability:   Bridge, on
    Capability:   Router, on
  Port:        
    PortID:       ifname GigabitEthernet1/0/35
    PortDescr:    GigabitEthernet1/0/35 Interface
    TTL:          120
    MFS:          10240
    PMD autoneg:  supported: yes, enabled: yes
      MAU oper type: 1000BaseTFD - Four-pair Category 5 UTP, full duplex mode
    MDI Power:    supported: no, enabled: no, pair control: no
      Device type:  PSE
      Power pairs:  signal
      Class:        class 0
      Power type:   2
      Power Source: PSE
      Power Priority: critical
      PD requested power Value: 0
      PSE allocated power Value: 0
  VLAN:         1, pvid: yes VLAN 0001
  PPVID:        supported: yes, enabled: no
-------------------------------------------------------------------------------

3. Какая технология используется для разделения L2 коммутатора на несколько виртуальных сетей? Какой пакет и команды есть в Linux для этого? Приведите пример конфига.

Технология VLAN (Virtual LAN), стандарт - 802.1q.
Пакет vlan

user@u-server-test:~$ cat /etc/netplan/00-installer-config.yaml
# This is the network config written by 'subiquity'
network:
  ethernets:
    enp0s3:
      dhcp4: no
  vlans:  
    vlan1:
      id: 1
      link: enp0s3
      dhcp4: yes
  version: 2

4. Какие типы агрегации интерфейсов есть в Linux? Какие опции есть для балансировки нагрузки? Приведите пример конфига.

balance-rr, active-backup, balance-xor, broadcast, 802.3ad, balance-tlb, and balance-alb, balance-tcp and balance-slb

Balance-rr - пакеты отправляются последовательно. Этот режим применяется для балансировки нагрузки и отказоустойчивости
Balance-xor - режим применяется для отказоустойчивости и балансировки. Одна и та же сетевая карта передает пакеты одним и тем же получателям
Balance-tlb - режим адаптивной балансировки передачи. Исходящий трафик распределяется в зависимости от загруженности каждой сетевой карты (определяется скоростью загрузки). Не требует дополнительной настройки на коммутаторе. Входящий трафик приходит на текущую сетевую карту. Если она выходит из строя, то другая сетевая карта берёт себе MAC адрес вышедшей из строя карты.
Balance-alb - режим адаптивной балансировки нагрузки. Включает в себя политику balance-tlb плюс осуществляет балансировку входящего трафика. Не требует дополнительной настройки на коммутаторе. Балансировка входящего трафика достигается путём ARP переговоров. Драйвер bonding перехватывает ARP ответы, отправляемые с локальных сетевых карт наружу, и переписывает MAC адрес источника на один из уникальных MAC адресов сетевой карты, участвующей в объединении. Таким образом различные пиры используют различные MAC адреса сервера. Балансировка входящего трафика распределяется последовательно (round-robin) между интерфейсами.
Balance-tcp - В этом режиме выполняется балансировка нагрузки с учетом данных со 2-го по 4-й уровни. Например, MAC-адрес назначения, IP-адрес и TCP-порт. Кроме того, balance-tcp требует, чтобы на коммутаторе был настроен LACP. Этот режим похож на режим связывания 4, используемый драйвером связывания Linux. По возможности рекомендуется использовать balance-tcp, так как LACP обеспечивает максимальную отказоустойчивость при обнаружении сбоев канала и предоставляет дополнительную диагностическую информацию о связи.
Balance-slb - Балансирует потоки на основе MAC-адреса источника и выходной VLAN с периодической перебалансировкой по мере изменения шаблонов трафика. Связывание с balance-slb позволяет ограниченную форму балансировки нагрузки без ведома или сотрудничества удаленного коммутатора. SLB назначает каждую пару MAC-адресов источника и VLAN каналу и передает все пакеты с этого MAC-адреса и VLAN по этому каналу. В этом режиме используется простой алгоритм хеширования, основанный на исходном MAC-адресе и номере VLAN, с периодической перебалансировкой по мере изменения шаблонов трафика. Этот режим аналогичен режиму 2 связывания, используемому драйвером связывания Linux. Этот режим используется, когда коммутатор настроен на связывание, но не настроен на использование LACP (статическое вместо динамического связывания).

network:
  ethernets:
    switchport1:
      dhcp4: no
    switchport1:
      dhcp4: no
  bonds:
    bond0:
      interfaces: [switchport1, switchport2]
      parameters: 
        mode: balance-tcp
  vlans:
    vlan1:
      id: 1
      link: bond0
      dhcp4: yes
  version: 2

5. Сколько IP адресов в сети с маской /29 ? Сколько /29 подсетей можно получить из сети с маской /24. Приведите несколько примеров /29 подсетей внутри сети 10.10.10.0/24

В сети с маской /29 всего 8 адресов, из них 6 узловых.

Можно получить 256/8=32 диапазона адресов.

Requested size: 6 hosts
Netmask:   255.255.255.248 = 29 11111111.11111111.11111111.11111 000
Network:   10.10.10.32/29       00001010.00001010.00001010.00100 000
HostMin:   10.10.10.33          00001010.00001010.00001010.00100 001
HostMax:   10.10.10.38          00001010.00001010.00001010.00100 110
Broadcast: 10.10.10.39          00001010.00001010.00001010.00100 111
Hosts/Net: 6                     Class A, Private Internet
 
Requested size: 6 hosts
Netmask:   255.255.255.248 = 29 11111111.11111111.11111111.11111 000
Network:   10.10.10.56/29       00001010.00001010.00001010.00111 000
HostMin:   10.10.10.57          00001010.00001010.00001010.00111 001
HostMax:   10.10.10.62          00001010.00001010.00001010.00111 110
Broadcast: 10.10.10.63          00001010.00001010.00001010.00111 111
Hosts/Net: 6                     Class A, Private Internet

Requested size: 6 hosts
Netmask:   255.255.255.248 = 29 11111111.11111111.11111111.11111 000
Network:   10.10.10.80/29       00001010.00001010.00001010.01010 000
HostMin:   10.10.10.81          00001010.00001010.00001010.01010 001
HostMax:   10.10.10.86          00001010.00001010.00001010.01010 110
Broadcast: 10.10.10.87          00001010.00001010.00001010.01010 111
Hosts/Net: 6                     Class A, Private Internet

6. Задача: вас попросили организовать стык между 2-мя организациями. Диапазоны 10.0.0.0/8, 172.16.0.0/12, 192.168.0.0/16 уже заняты. Из какой подсети допустимо взять частные IP адреса? Маску выберите из расчета максимум 40-50 хостов внутри подсети.

roman@DME-UBUNTU:/data/VMs/vagrant$ ipcalc 100.64.0.0/26
Address:   100.64.0.0           01100100.01000000.00000000.00 000000
Netmask:   255.255.255.192 = 26 11111111.11111111.11111111.11 000000
Wildcard:  0.0.0.63             00000000.00000000.00000000.00 111111
=>
Network:   100.64.0.0/26        01100100.01000000.00000000.00 000000
HostMin:   100.64.0.1           01100100.01000000.00000000.00 000001
HostMax:   100.64.0.62          01100100.01000000.00000000.00 111110
Broadcast: 100.64.0.63          01100100.01000000.00000000.00 111111
Hosts/Net: 62                    Class A


7. Как проверить ARP таблицу в Linux, Windows? Как очистить ARP кеш полностью? Как из ARP таблицы удалить только один нужный IP?

Linux: 
проверить	ip neigh
удалить один	ip neigh flush [адрес]
удалить все	ip neigh flush all 

Windows: 
проверить	arp -a
удалить один	arp -d
удалить все	arp -d *
